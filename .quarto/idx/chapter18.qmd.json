{"title":"オブジェクト指向とクラス","markdown":{"headingText":"オブジェクト指向とクラス","containsRefs":false,"markdown":"\n```{r, setup, include=FALSE, echo=FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE\n)\n```\n\nRは**オブジェクト指向プログラミング言語**であるとされています。オブジェクト指向とは、プログラミングで取り扱う「**もの（Objects）**」を**オブジェクト**として扱い、オブジェクトには**クラス**とメソッドが設定されるような形でプログラミング言語を設計する考え方を指す言葉です。\n\nオブジェクト指向に関わる言葉はたくさんあります（カプセル化・継承・ポリモルフィズム・クラス・インスタンス・メソッド・アクセサ等々、[Wikipedia](https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0)を参照）。他のオブジェクト指向言語、例えばPythonやRubyではこのあたりの理解がプログラミングにおいてとても重要になるのですが、Rでははっきりと理解していなくても、（少なくとも小規模データの解析やグラフ描画程度であれば）大きな問題にはなりません。オブジェクト指向の概念が重要となるのは、恒久的にメンテナンスを続けて使用され続けるプログラム（例えばライブラリなど）や、オンラインで大規模に開発し、常にメンテナンスが必要となるプログラム（Webアプリケーションなど）を作成する時になります。以下にオブジェクト指向の言葉の意味を説明しますが、なんとなくわかる、という程度で通常のデータ解析で困ることはないでしょう。\n\nこの章では、やや抽象的なプログラミングに関する内容について説明します。Rでグラフ作成やデータ処理、統計解析を行うのにすぐに必要となる事項ではありませんので、飛ばして次の章に進んで頂いても問題はありません。\n\n## クラス\n\nオブジェクトには**クラス**という特性があります。Rでは、数値（numeric）、文字列（character）、論理型（logical）、リスト（list）、行列（matrix、array）、因子（factor）、データフレーム（data.frame）、時系列（ts）などがクラスとして設定されています。クラスは`class`関数を用いて確認することができます。\n\n```{r, filename=\"オブジェクトのクラス\"}\n1 |> class()\n\"a\" |> class()\nT |> class()\n\nc(1, 1, 1) |> class() # ベクター自体には特別なクラスはない\nlist(1, 1, 1) |> class()\nmatrix(1:4, nrow = 2) |> class()\n\nfactor(1) |> class()\niris |> class()\nNile |> class()\n```\n\nクラスの役割は、**「オブジェクトの型と取扱いの方法」**を定めるところにあります。例えばデータフレームであれば、「同じ長さのベクトルのリストで、行と列を持つ表の形をしていて、行と列に名前を登録できるもの」という「型」を持っています。また、`plot.data.frame`関数のように、データフレームを「取り扱う方法」が準備されています。このように、クラスは「型」と「取り扱い方」をセットにし、データの取り扱いを簡単にする役割を持ちます。\n\nデータフレームをクラスとするオブジェクトは、この「型」を元にした構造を持ち、値や行・列の数・名前が異なるものになっています。つまり、データフレームという「型」は同じですが、中身が違うものがオブジェクトとして作り出されていることになります。プログラミング言語では、この「型」から作り出されたオブジェクトのことを、**インスタンス**と呼びます。\n\nつまり、data.frameはクラスであり、data.frameクラスのオブジェクトである`iris`や`cars`はインスタンスである、ということになります。\n\n## Pythonでのクラスの例\n\nクラスとインスタンスに関しては、他の言語での例を見た方がわかりやすいかと思います。以下はPythonの[Documentation](https://docs.python.org/ja/3/tutorial/classes.html)に記載されている`Dog`クラスの定義とインスタンス作成の例です。\n\nRを含めて、多くのプログラミング言語では**クラスを定義**することができます。クラスにはクラス名が必要です（下の例では`Dog`がクラス名）。クラスを定義するときには、インスタンスの要素（`name`（名前）と`tricks`（芸）という2つ）、インスタンスを演算に用いる**メソッド**、**アクセサ**（アクセス・メソッド）と呼ばれる、インスタンスの要素を変更する方法（下の例では`add_trick`メソッド、**セッター（setter）**と呼ばれる）と要素を呼び出す方法（**ゲッター（getter）**）を準備するのが一般的です。\n\nインスタンスを作成する場合には、クラス名にカッコをつけ、`__init__`に示した引数（`self`はそのオブジェクト自身を指すので、`name`が引数）を指定して実行します。下の例では`dog_Fido`と`dog_Buddy`という2つのインスタンスを作成し、それぞれ`name`に`\"Fido\"`、`\"Buddy`\"を設定しています。\n\n```{python, eval=FALSE}\n# クラスの定義\nclass Dog:\n    # メソッドの定義\n    def __init__(self, name):\n        self.name = name\n        self.tricks = []\n    # アクセサの定義\n    def add_trick(self, trick):\n        self.tricks.append(trick)\n\n# インスタンス（クラスオブジェクト）の作成\ndog_Fido = Dog('Fido')\ndog_Buddy = Dog('Buddy')\n```\n\n### RとPythonでのクラスの比較\n\nこれだけではよく分からないと思いますので、もう少し説明を加えます。\n\nクラスの設定の目的の一つは、データを**カプセル化**することです。カプセル化というのは、バラバラのデータや取り扱い方法をひとまとめにして、取り扱いやすくすることです。上の例では、犬の名前（`name`）、芸（`trick`）と取り扱い方法（メソッド）をひとまとめにしています。こうすることで、その犬の名前と芸をひとまとめ、つまりカプセル化しているわけです。\n\nRでは、このようなカプセル化を行うのに、リストが用いられています。ですので、非常に単純化すると、カプセル化とはリストみたいなものだと思ってもらうと良いかと思います。\n\nまた、犬の名前や芸がころころ変わってしまうと、犬の名前とその犬ができる芸の関係を維持するのが難しくなってしまいます。ですので、**アクセサ**を準備して、関数を用いないと名前や芸などの要素を追加・変更できないようにしています。\n\nRでは、listの要素を変える方法、例えば、リストの要素への代入（セッター）や、リストの要素を呼び出す方法（ゲッター）が、アクセサに当たります。\n\nオブジェクトを作成すると、そのクラスのオブジェクトとして変数ができます。この変数は、「型」から作られた「もの」、つまりインスタンスになります。下のRの例では、`lst_Fibo`がリスト（クラス）のオブジェクト（インスタンス）である、ということになります。\n\n```{r}\n# これが__init__に当たる、オブジェクト作成時の方法\nlst_Fibo <- list(name = \"Fibo\", tricks = c(\"ballcatch\", \"zigzag\"))\n\nlst_Fibo$name <- \"Pochi\" # これがアクセサ（セッター）みたいなもの\n\nlst_Fibo$name # これもアクセサ（ゲッター）みたいなもの\n\nlst_Fibo # オブジェクトの名前の要素が変わる\n```\n\nこのように見ると、リストは大体クラスの要件を満たしているように見えます。ただし、リストでは要素の数を自由自在に増やしたり減らしたりすることができます。例えば、登録されている犬の名前（`name`）を変えたり、`tricks`を削って`birthday`を追加する、といったことがリストでは簡単にできてしまいます。このような変換を行うと、Pythonの型（クラス）で定義したものとは違う要素を持つオブジェクトを簡単に作れてしまうことになります。\n\n他言語のクラスでは、インスタンスごとに取り扱いが変わることがないように、要素の追加や削除は原則できないようになっています。また、クラスの定義を行うときに、要素のデータ型や要素に対する取り扱いの方法（メソッド）を定義しておき、要素の型、取り扱いの方法を厳密に定めておくのが一般的です。このようにクラスの「要素」・「型」・「取り扱い方」を厳密に定めておくことで、そのクラスのインスタンスをいつ用いても同じ方法で取り扱えることを担保しています。\n\nこのような性質は、「誰が、いつ、どのような形でそのクラスのインスタンスを用いても、同じ方法で取り扱うことができる」ために重要となります。ですので、複数人が関わる大規模な開発や大きなアプリケーション、メンテナンスを常時必要とする長期プロジェクトなどではクラスの厳密な定義が非常に重要となります。\n\n一方で、Rはその場限りの解析に用いることが多い言語です。もちろん、ライブラリの構築時や、恒常的に組織でメンテナンスし、使い続けるRのプログラムを開発する場合には、クラスの定義と取り扱いは重要となります。ですが、その場限りの解析では、データのカプセル化の役割をリストが十分に果たすことができます。このような理由から、Rでクラスを定義し、用いる方法は（少なくとも簡単な統計解析においては）、あまり重要視されていません。\n\n## Rのクラスとアトリビュート（attributes）\n\n因子（[10章](./chapter10.html)）やデータフレーム（[12章](./chapter12.html)）で説明した通り、Rではクラスはアトリビュート（attributes）として設定されています。ただし、クラスは必ずしもアトリビュートとして設定されているわけではありません。クラスにはアトリビュートとして設定されるものと、されていないものがあります。\n\n数値や文字列、リスト、行列などはアトリビュートとしてクラス名を持たないのに対し、因子やデータフレーム、時系列はアトリビュートとしてクラスが登録されています。\n\n```{r, filename=\"各クラスに設定されたAttributes\"}\n1 |>  attributes()\n\"a\" |> attributes()\nT |> attributes()\n\nc(1, 1, 1) |> attributes()\nlist(1, 1, 1) |> attributes()\nmatrix(1:4, nrow = 2) |> attributes()\n\nfactor(1) |> attributes()\niris |> attributes() |> lapply(head)\nNile |> attributes()\n```\n\nこのようなアトリビュートの差は、**親クラス**（superclass、スーパークラス）と呼ばれるものの違いによります。Rを含め、オブジェクト指向の言語では、クラスを定義するときに、他のクラスの定義を流用し、機能や要素等を追加した上で新しいクラスとすることができます。このように、他のクラスの定義を流用することを、**継承**（inheritance）と呼びます。つまり、数値や文字列、リストなどと、データフレーム、因子、時系列では親クラスが異なるクラスである、ということになります。\n\nRで親クラスを把握するときに用いる関数として、`pryr::otype`があります[@pryr_bib]。`pryr::otype`の引数にオブジェクトを取ると、そのオブジェクトの親クラスを調べることができます。\n\n```{r, filename=\"plyr::otypeで親クラスを確認する\"}\n# 数値、文字列はbaseクラスを親とする\n1 |> pryr::otype()\n\"a\" |> pryr::otype()\nT |> pryr::otype()\n\n# リスト・行列はbaseクラスを親とする\nc(1, 1, 1) |> pryr::otype()\nlist(1, 1, 1) |> pryr::otype()\nmatrix(1:4, nrow = 2) |> pryr::otype()\n\n# 因子・データフレーム・時系列はS3クラスを親とする\nfactor(1) |> pryr::otype()\niris |> pryr::otype()\nNile |> pryr::otype()\n```\n\n上のように、数値や文字列、リストなどのアトリビュートにクラスを持たないオブジェクトの親クラスはbase、因子やデータフレーム、時系列などのアトリビュートを持つオブジェクトの親クラスはS3となっています。\n\nRには、これらの親クラスの他に、S4、[R6](https://r6.r-lib.org/articles/Introduction.html) [@R6_bib]等の親クラスが存在します。\n\n```{r, filename=\"S3の例\"}\nlm_obj <- lm(iris$Sepal.Length~iris$Sepal.Width)\nlm_obj |> pryr::otype()\n```\n\n```{r, filename=\"S4の例\"}\npacman::p_load(lme4)\nlme4_obj <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)\nlme4_obj |> pryr::otype()\n```\n\n```{r, filename=\"R6の例\"}\npacman::p_load(cmdstanr)\nmod <- \n    file.path(cmdstan_path(), \"examples\", \"bernoulli\", \"bernoulli.stan\") |>\n    cmdstan_model()\nmod |> pryr::otype() # otypeではS3扱い\nmod |> class() # 中身はR6\n```\n\nRにはこの他にも、[`reference class`](http://adv-r.had.co.nz/R5.html)（昔はR5として開発されていたものだと思います）、[`aoos`](https://wahani.github.io/aoos/) [@aoos_bib]、[`S7`](https://rconsortium.github.io/S7/) [@S7_bib]などのオブジェクト指向プログラミングに関するクラスがあります。色々あって混乱しているのは、「S3とS4がイマイチ」と思う人が多かったためでしょう。\n\n`S7`を開発しているのが`ggplot2`を開発したHadley Wickhamなので（2023年現在）、いずれは`S7`が主流になるのかもしれませんが、現状では簡単にRにオブジェクト指向のクラスを持ち込む場合にはS3を、少し複雑なプロジェクトにはS4を用いるのが一般的であるように見えます。特に[Bioconductor](https://www.bioconductor.org/)のライブラリではS4のオブジェクトが用いられています。\n\n## RでのS3、S4クラスオブジェクトの取り扱い\n\n上に述べたように、Rではライブラリを作成する等の特殊な場合を除いて、クラスを定義することはありません。クラスの定義は入門で学ぶには少し高度な内容となるので、他の文献に説明を譲ります。\n\nしかし、統計の関数の返り値はS3やS4を親クラスとしたオブジェクトとなっている場合が多いため、オブジェクトの取り扱い方を理解しておくことは統計解析において重要となります。\n\n典型的なS3の例として線形回帰の結果（lmオブジェクト）、S4の例として線形混合モデルの結果（lmerModオブジェクト、[lme4パッケージ](https://cran.r-project.org/web/packages/lme4/index.html) [@lme4_bib]より）を用いて、オブジェクトの取り扱い方を説明します。\n\nS3オブジェクトでもS4オブジェクトでも、オブジェクトの内容を確認する場合には、まず`str`関数でオブジェクトの構造を理解するところから始めます。\n\n```{r, filename=\"S3：str関数で構造を確認する\"}\nlm_obj |> str(list.len=3) # S3オブジェクト（一部表示）\n```\n\n```{r, filename=\"S4：str関数で構造を確認する\"}\nlme4_obj |> str(list.len=3) # S4オブジェクト（一部表示）\n```\n\nどちらも`str`関数の引数を指定しない場合にはとても沢山の出力が示されるのですが、特徴としては、\n\n - \\$または\\@から始まる行がたくさん記載されている\n - \\$・\\@の後ろに「単語 : データ型」といった表記がある\n - S3には\\$のみ、S4には\\$と\\@が記載されている\n - ところどころにattrという記載がある\n - `str`関数の引数がS3の時は、1行目に「List of 〇〇」の表記がある\n\nということが分かるかと思います。\n\n\\$や\\@は要素の呼び出しに用いるものです。これらはリストやデータフレームで、名前を用いて要素を呼び出す際の`$`と同じものです。\\$・\\@の後に続き単語はリストやデータフレームの名前に当たるもので、`$`・`@`に続けて記載することで要素を呼び出すことができます。S3・S4クラスにはゲッター（getter）の関数が備わっている場合もあり、関数を用いて要素を呼び出せる場合もあります。\n\n`@`はS4クラスに特有の呼び出しの記号で、S3クラスでは用いることがありません。attrはattributesの意味で、その要素に付属するattributesを示しています。要素を`attributes`関数の引数にすることで、そのattributesの内容を取り出すことができます。\n\n最後に、S3オブジェクトの「List of 〇〇」についてですが、RではS3オブジェクトはデータの登録や関数の適用に特徴のあるリストとして実装されています。データの登録に関しては、S3クラスの定義に従い、型チェック等が組み込まれます。また、アトリビュートにクラスが追加されます。\n\n関数の適用に関しては、ジェネリック関数を用いて、そのクラスのオブジェクトを引数にした場合の演算が定義されます。このように、関数名は同じだけどオブジェクトのクラスによって出力が異なる性質のことを**ポリモルフィズム**と呼びます。\n\n以下にS3とS4クラスの値の呼び出しや、関数の適用例を挙げます。\n\n```{r}\n# S3クラス\nlm_obj |> class()\n\n# S3クラス：要素の取り出し\nlm_obj$coefficients\n\n# S3クラス：アトリビュートを読み出す\nlm_obj$coefficients |> attributes()\n\n# S3クラス：関数の引数にする（plot.lmが呼び出されている）\nlm_obj |> plot(which = 1)\n```\n\n```{r}\n# S4クラス\nlme4_obj |> class()\n\n# S4クラス：要素の取り出し\nlme4_obj@pp$beta0\n\n# S4クラス：アトリビュートを読み出す\nlme4_obj@pp$X |> attributes() |> _$dim\n\n# S4クラス：関数の引数にする（summary.lmerModが呼び出されている）\nsummary(lme4_obj)\n\n# S4クラス：アクセサ（値を取り出す関数）\ncoef(lme4_obj)\n```\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"output-file":"chapter18.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","lightbox":"auto","bibliography":["references.bib"],"editor":"source","theme":{"light":"united","dark":"cyborg"},"toc-expand":2,"code-block-bg":true,"code-block-border-left":"#31BAE9"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}