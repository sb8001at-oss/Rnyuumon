{"title":"数値","markdown":{"headingText":"数値","containsRefs":false,"markdown":"\n```{r, setup, include=FALSE, echo=FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE\n)\n```\n\nRの型で最もよく利用するものが**数値（numeric）**です。以下では、数値を取り扱う際に用いる関数や手法を紹介します。\n\n## 数値を引数とする関数\n\nまずは、数値を演算するときに用いる関数を紹介します。よく用いられる関数は以下の表1の通りです（`x`、`y`は引数）。関数は演算子より優先的に計算されます。引数である数値はベクターで与えることもできます。\n\n```{r, echo=FALSE}\nd <- data.frame(\n  func = c(\"sqrt(x)\" ,\"exp(x)\", \"log(x, base=y)\", \"log(x)\",\"log10(x)\", \"log2(x)\", \n            \"sin(x)\", \"cos(x)\", \"tan(x)\", \"acos(x)\", \"asin(x)\", \"atan(x)\", \n            \"round(x, digits=y)\", \"ceiling(x)\", \"floor(x)\", \"trunc(x)\", \n            \"signif(x, digits=y)\", \"abs(x)\"),\n  meaning = c(\"平方根\", \"e（ネイピア数、自然対数の底）のx乗\", \"yを底にした対数\", \"自然対数\", \"常用対数\", \"底が2の対数\", \"サイン（xはラジアン）\", \"コサイン\", \"タンジェント\", \"アークサイン（サインの逆関数）\", \"アークコサイン\", \"アークタンジェント\", \"小数点以下y桁で四捨五入\", \"切り上げ\", \"切り下げ\", \"切り捨て\", \"y桁を残して四捨五入\", \"xの絶対値\")\n)\n\ncolnames(d) <- c(\"関数名\", \"xに適用される計算手法\")\nknitr::kable(d, caption=\"表1：数値の演算に用いる関数\")\n```\n\n```{r, filename=\"数値演算の関数\"}\nsqrt(9) # 平方根\n\nexp(1) # 指数変換\n\nlog(8, base = 2) # 底が2の対数\n\nlog(10) # 底がeの対数\n\nlog10(10) # 底が10の対数\n\nlog2(10) # 底が2の対数\n\nsin(0.5*pi) # サイン\n\ncos(pi) # コサイン\n\ntan(0.25*pi) # タンジェント\n\nasin(0.5) # アークサイン（サインの逆関数）\n\nacos(0.5) # アークコサイン\n\natan(0.5) # アークタンジェント\n\nround(pi, digits=2) # 四捨五入\n\nceiling(pi) # 切り上げ\n\nfloor(pi) # 切り下げ\n\ntrunc(pi) # 切り捨て\n\nsignif(pi*100, digits=2) # 2桁以下を四捨五入\n\nabs(-5) # 絶対値\n\nlog2(c(2, 4, 8, 16, 32, 64)) # ベクターを引数にする時\n```\n\n:::{.callout-tip collapse=\"true\"}\n\n## Rのroundの仕様\n\nRの`round`関数は概ね四捨五入の結果を返しますが、正確には[四捨五入にはなっていない場合](https://www.atleaf.co.jp/column.html?pageId=45)があるので、注意が必要です。\n\n:::\n\n## 組み合わせ・階乗・順列\n\n統計と確率には密接な関係があります。高校数学の確率で習ったように、確率の計算では順列・組合せの数が重要となります。Rには組み合わせを計算する関数として、`choose`関数があります。また、階乗を計算する関数は`factorial`関数です。順列を計算する関数はないため、階乗を用いて順列を計算する必要があります。\n\n```{r, filename=\"組み合わせと階乗\"}\nchoose(5, 2) # 5個から2個を選ぶ組み合わせ（5C2）\n\nfactorial(3) # 3の階乗（1 * 2 * 3）\n\nfactorial(5)/factorial(2) # 5個の要素から3つを並べる順列(5P3)\n```\n\n## 数列の作成\n\nRでは、ベクターは`c`関数を用いて作成します。しかし、長いベクターを`c`関数で自作するのは大変ですし、等差数列や等比数列を作るのに`for`文を用いるのも面倒です。Rでは、数列を作る関数を用いて、等差数列などを作成することができます。また、繰り返しのあるベクターも、関数により作成することができます。\n\n等差数列の作成には、`for`文の説明時に用いた `:`（コロン）や`seq`関数を用います。等比数列は、簡単なものであれば`seq`関数と累乗を用いて作成できます。繰り返しのあるベクターは`rep`関数を用いて作成できます。\n\n```{r, echo=FALSE}\nd <- data.frame(\n  func = c(\"x:y\" ,\"seq(x, y, by = z)\", \"rep(x, y)\", \"cumsum(x)\",\"cumprod(x)\", \"choose(x, y)\", \"factorial(x)\", \"prod(x)\"),\n  meaning = c(\"xからyまで連続する整数\", \"xからyまでz間隔での数列\", \"xをy回繰り返す\", \"xの累積和\", \"xの累積積\", \"x個からy個を選ぶ組み合わせ\", \"xの階乗\", \"xの総乗\")\n)\n\ncolnames(d) <- c(\"関数名\", \"xに適用される計算手法\")\nknitr::kable(d, caption=\"表2：数値のベクター作成・組み合わせなどの関数\")\n```\n\n```{r, filename=\"seq関数とrep関数\"}\n1:10 # 1から10まで公差1の数列\n\nseq(from = 1, to = 10, by=3) # 1から10まで公差3の等差数列\n\nseq(1, 10, length.out=3) # 1から10まで等間隔で、3つの長さの数列\n\n3 ^ (0:10) # 公比3の等比数列\n\n3 ^ seq(0, 10, by=2) # 公比9の等比数列\n\nrep(1:3, 5) # 1, 2, 3を5回繰り返す\n\nrep(1:3, c(3, 3, 3)) # 1, 2, 3をそれぞれ3回繰り返す\n\nrep(1:3, c(3, 2, 1)) # 1を3回、2を2回、3を1回繰り返す\n\nrep(1:3, length.out=10) # 1, 2, 3を長さ10まで繰り返す\n\nrep(c(\"apple\", \"orange\", \"banana\"), 2) # どの型でも繰り返しができる\n```\n\n## 総乗・累積和・累積積\n\nRで総乗（数列をすべて掛け算したもの）を計算する場合には、`prod`関数を用います。また、累積和（ベクターの前から順番に足し算したもの）と累積積（前から順番に掛け算したもの）の数列を作る時には、`cumsum`関数と`cumprod`関数を用います。等比数列は`cumprod`関数を利用すれば作成することができます。\n\n```{r, filename=\"総乗・累積和・累積積・等比数列\"}\nprod(1:4) # 総乗\n\ncumsum(1:5) # 累積和\n\ncumprod(1:5) # 累積積\n\ncumprod(rep(2, 10)) # 初項2、公比2の等比数列\n```\n\n## ベクターの基礎演算と基礎統計量\n\n数値のベクターに対して、平均値や標準偏差などを計算する関数も、Rは備えています。代表的な関数を以下に示します。\n\n```{r, echo=FALSE}\nd <- data.frame(\n  func = c(\"sum(x)\", \"length(x)\",\"mean(x)\", \"var(x)\", \"sd(x)\", \"median(x)\", \"max(x)\",\n           \"min(x)\",\"quantile(x, probs)\", \n           \"cov(x, y)\", \"cov(data.frame)\",  \"cor(x, y)\", \"cor(data.frame)\"),\n  meaning = c(\"合計値\", \"ベクターの長さ\", \"平均値\", \"（不偏）分散\", \"（不偏）標準偏差\", \"中央値\", \"最大値\", \"最小値\", \"分位値（probsは分位の位値）\", \"共分散\", \"分散・共分散行列\", \"相関係数\", \"相関行列\")\n)\n\ncolnames(d) <- c(\"関数名\", \"x、yに適用される計算手法\")\nknitr::kable(d, caption=\"表3：数値ベクターの演算に用いる関数\")\n```\n\n```{r, echo=FALSE}\nset.seed(0)\n```\n\n```{r, filename=\"ベクターの基礎演算と基礎統計量\"}\nx <- seq(0, 10, by=0.5); x # 0から10まで公差0.5の数列\ny <- rnorm(21, 5, 3); y # 長さ21の正規乱数\n\nsum(x) # xの合計\n\nlength(x) # xの長さ\n\nmean(x) # xの平均値\n\nvar(x) # xの分散\n\nsd(x) # xの標準偏差\n\nsd(x)/length(x)^0.5 # xの標準誤差\n\nmedian(x) # xの中央値\n\nmax(x) # xの最大値\n\nmin(x) # xの最小値\n\nquantile(x, probs=c(0.25, 0.75)) # xの25%、75%分位値\n\ncov(x, y) # xとyの共分散\n\ncov(data.frame(x, y)) # xとyの分散・共分散行列\n\ncor(x, y) # xとyの相関係数\n\ncor(data.frame(x, y)) # xとyの相関行列\n```\n\n:::{.callout-tip collapse=\"true\"}\n\n## 基礎統計量の計算\n\n以下に、上記の基礎統計量の計算式を示します。\n\n`sum(x)`：合計値、x~1~～x~n~の和は以下の式で表されます。\n\n$$sum(x)=\\sum_{i=1}^{n}x_{i}$$\n\n`mean(x)`：平均値（$\\bar{x}$）、x~1~～x~n~の平均値は以下の式で表されます。\n\n$$mean(x)=\\frac{\\sum_{i=1}^{n}x_{i}}{n}$$\n\n`var(x)`：不偏分散、x~1~～x~n~の分散は以下の式で表されます。\n\n$$var(x)=\\frac{\\sum_{i=1}^{n}(x_{i}-\\bar{x})^2}{n-1}$$\n\n`sd(x)`：不偏標準偏差、x~1~～x~n~の不偏標準偏差は以下の式で表されます。\n\n$$sd(x)=\\sqrt{\\frac{\\sum_{i=1}^{n}(x_{i}-\\bar{x})^2}{n-1}}$$\n\n標準誤差（standard error）、x~1~～x~n~の標準誤差は以下の式で表されます。\n\n$$se(x)=\\frac{1}{\\sqrt{n}} \\cdot sd(x)=\\frac{1}{\\sqrt{n}}\\sqrt{\\frac{\\sum_{i=1}^{n}(x_{i}-\\bar{x})^2}{n-1}}$$\n\n`cov(x, y)`：共分散、x~1~～x~n~とy~1~～y~n~の共分散は平均値（$\\bar{x}$、$\\bar{y}$）を用いて以下の式で表されます。\n\n$$cov(x, y)=\\frac{1}{n}\\sum_{i=1}^{n}(x_{i}-\\bar{x})(y_{i}-\\bar{y})$$\n\n`cor(x, y)`：相関係数、x~1~～x~n~とy~1~～y~n~の相関係数は平均値（$\\bar{x}$、$\\bar{y}$）を用いて以下の式で表されます。\n\n$$cor(x,y)=\\frac{cov(x,y)}{var(x) \\cdot var(y)}=\\frac{\\sum_{i=1}^{n}(x_{i}-\\bar{x})(y_{i}-\\bar{y})}{\\sqrt{\\sum_{i=1}^{n}(x_{i}-\\bar{x})^2 \\cdot \\sum_{i=1}^{n}(y_{i}-\\bar{y})^2}}$$\n\n:::\n\n\n### 度数分布の計算\n\nRでは数値のベクターからヒストグラムを書くことが多いのですが、別途**度数分布表**を描きたいという場合もあります。度数分布を調べる時には、`cut`関数を用います。\n\n`cut`関数は第一引数に数値のベクター、第二引数に度数分布の切断点（1\\~10、11\\~20などの10と11の境目のこと）を取ります。結果として、数値を「(数値, 数値\\]」という形の因子（factor）に変換したものが返ってきます。この時、カッコ（\"(\"）は大なり、四角カッコ（\"\\]\"）は小なりイコールを表しています。ですので、例えば「(40,60\\]」と示されている場合には、その値が40より大きく（$x>40$）、60以下($x \\leq 60$)であることを表しています。\n\n因子型を引数とする関数には`table`関数というものがあります。この`cut`関数と`table`関数を組み合わせることで、度数分布表を簡単に作成することができます。\n\n```{r, filename=\"度数分布の計算\"}\nz <- runif(150, min = 0, max = 100)\n# データの存在する範囲を返す関数（因子が返ってくる）\ncut(z, breaks=c(-1, 20, 40, 60, 80, 101)) \n\nz_cut <- cut(z, breaks=c(-1, 20, 40, 60, 80, 101)) \ntable(z_cut) # 度数分布表を返すtable関数\n```\n\n## summary関数\n\nRでは、基礎統計量を計算するときには`summary`関数を用いることができます。`summary`関数はベクターを引数に取り、ベクターの最小値、25%四分位、中央値、平均値、75%四分位値、最大値を一度に計算してくれる関数です。`summary`関数の引数にはベクターだけでなく、リストやデータフレームを用いることもできます。`summary`関数は引数の型・クラスによって演算を変え、データの要約を示してくれます。\n\n```{r, filename=\"summary関数\"}\nsummary(x) # ベクターを引数にするとき\n\nsummary(list(x, y)) # リストを引数にするとき\n\nsummary(data.frame(x, y)) # データフレームを引数にするとき\n```\n\n:::{.callout-tip collapse=\"true\"}\n\n## ジェネリックな関数（generic function）\n\n`summary`関数のように、色々な型・クラスを引数にとり、その型・クラスに応じて出力を変える関数のことを、**ジェネリック関数（generic function）**と呼びます。ジェネリック関数は引数によって呼び出す関数（`summary.data.frame`や`summary.matrix`など）を変えることで、違う型・クラスの引数に対応しています。ジェネリック関数の詳細を調べる場合には、`methods`関数を用います。例えば、`methods(summary)`を実行すると、`summary`関数に属しているジェネリック関数の一覧を確認することができます。\n\n:::\n\n## 微分と積分\n\n### 微分：deriv関数\n\nRで微分を計算する関数が`deriv`関数です。`deriv`関数は`~`の後の引数に変数を用いた計算式、第二引数に微分する変数を文字列で指定する関数です。\n\n`deriv`関数の返り値はexpressionという型のオブジェクトです。このオブジェクトには、`.value`と`.grad`という2つの値が含まれており、`.value`は関数、`.grad`は関数を微分したものを示します。\n\nある値における微分値を計算する場合には、`deriv`関数で文字列で指定した変数名に数値を代入し、`eval`関数の引数に`deriv`関数の返り値を取ります。\n\nまた、`function.arg=TRUE`を引数に取ると、`deriv`関数の返り値が関数型になります。この場合には、第二引数で指定した文字列がそのまま引数のリストとなります。\n\nもう少し単純に微分の式を求める関数が`D`関数です。`D`関数では第一引数にexpressionを取り、第二引数に微分する変数を文字列で指定します。\n\n```{r, filename=\"微分\"}\ndx2x <- deriv(~ x^2, \"x\") # 微分はf'(x) ~ 2xになる\ndx2x # .grad[, \"x\"]が微分の式\n\nclass(dx2x) # 型・クラスはexpression\n\nx <- 5 # xは変数で後から指定できる\neval(dx2x) # evalで微分値の計算(gradientに表示)\n\nx <- 1:10\neval(dx2x) # 数列でも計算できる\n\n# 関数として微分を設定する\ndx2x_f <- deriv(y~x^2, c(\"x\", \"y\"), function.arg=TRUE)\nclass(dx2x_f) # 関数になっている\n\n# xとyを与えると微分値を計算する\ndx2x_f(10, 10^2)\n\n# D関数：関数を与えると微分の式を表示する\nD(expression(x^2), \"x\")\n```\n\n### 関数の最小値を求める：optim関数\n\n関数の最小値（微分が0となる値）を求めるための関数が`optim`関数です。`optim`関数は変数の初期値と関数を引数に取り、その関数が最小となる変数の組（[最適化問題](https://ja.wikipedia.org/wiki/%E6%9C%80%E9%81%A9%E5%8C%96%E5%95%8F%E9%A1%8C)の解）を返します。\n\n:::{.callout-tip collapse=\"true\"}\n\n## 最小値を求めるRosenbrock関数\n\n以下は、`optim`のヘルプ（`?optim`）で表示される`optim`の使用例に示されている、Rosenbrock関数（$y=a*(x_{2}-x_{1}^2)^2+(1-x_{1})^2$）の定義とその関数の形をグラフで示したものです。\n\n```{r, filename=\"Rosenbrock関数\"}\n# 関数の式\nfr <- function(x) { \n  x1 <- x[1]\n  x2 <- x[2]\n  100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n}\n\nfr2 <- function(x, y){100 * (y - x * x)^2 + (1 - x)^2}\n\npacman::p_load(plotly, tidyverse)\nd <- expand.grid(\n  x1 = seq(-2, 2, by = 0.05),\n  x2 = seq(-2, 2, by = 0.05)\n  )\n\nd$rb <- mapply(fr2, d$x1, d$x2)\n\nmrb <- matrix(d$rb, nrow=81, ncol=81)\n\nd |> \n  ggplot(aes(x=x1, y=x2, color=log(rb), fill=log(rb)))+\n  geom_bin2d(stat=\"identity\")+\n  labs(x=\"x1\", y=\"y1\", color=\"Rosenbrock関数の値\")\n\nfr(c(1, 1)) # 0になる\n\nplot_ly(z=~mrb) |> add_surface()\n```\n\n:::\n\n```{r, filename=\"optim関数\"}\nfr <- function(x) { ## Rosenbrock関数\n  x1 <- x[1]\n  x2 <- x[2]\n  100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n}\n\n# x1の初期値は-1.2、x2の初期値は1で最小値を求める\noptim(c(-1.2,1), fr) # 最小となるのはc(1,1)のとき\n```\n\n### 積分：integrate関数\n\nRでは、`integrate`関数を用いて積分値を計算することができます。`integrate`関数は第一引数に関数を取り、その後に積分する範囲を指定する関数です。`Inf`を用いることで無限大までの範囲の積分を計算することもできます。\n\n```{r, filename=\"積分\"}\nf <- \\(x){x^2}\nintegrate(f, 0, 2) # fを0から2まで積分する\n\nintegrate(dnorm, 0, Inf) # 正規分布を0から+無限大まで積分する\n```\n\n## 多項の方程式の解を求める\n\n多項の方程式（$ax^3+bx^2+cx+d=0$のような方程式）を解くための関数が`polyroot`関数です。`polyroot`関数は上記のa、b、c、dをベクターで引数に指定し、方程式の解を返します。また、`polyroot`関数の返り値を`Mod`関数に渡すことで、解に虚数が含まれている場合の解の原点からの距離に変換することができます。\n\n```{r, filename=\"polyroot関数\"}\npolyroot(c(1,1)) # x + 1 = 0の解\n\npolyroot(c(1, 2, 1)) # x^2 + 2x + 1 = 0の解\n\npolyroot(c(1, 3, 3, 1)) # x^3 + 3x^2 + 3x + 1 = 0の解\n\npolyroot(c(1, -3, -3, -1)) # 虚数解があるとき\n\nMod(polyroot(c(1, -3, -3, -1)) ) # 原点からの距離に変換\n```\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"output-file":"chapter8.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","lightbox":"auto","bibliography":["references.bib"],"editor":"source","theme":{"light":"united","dark":"cyborg"},"toc-expand":2,"code-block-bg":true,"code-block-border-left":"#31BAE9"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}