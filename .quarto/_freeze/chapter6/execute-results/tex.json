{
  "hash": "a4f2dfb274fcdf415c9a822cc5a2e2e3",
  "result": {
    "markdown": "# ライブラリ\n\n## ライブラリとは？\n\nRは統計のプログラミング言語であり，インストールしてすぐに統計の計算を行うことができるよう設計されています．例えば，代表的な統計処理である，平均値や標準偏差の計算，t検定や分散分析，グラフの作図等は，Rをインストールし，起動した次の瞬間から実行することができます．\n\nしかし，この素の（nativeな）Rでは，近年開発された現代的な統計手法や，優れたデザインやインタラクティブ性を持つグラフ，複雑なデータの効率的な整理，Webページの作成など，現代のプログラミング言語に備わる機能のすべてを用いることはできません．\n\nRでは，nativeなRではできない機能を後から追加することができます．この追加する機能のセットのことを，<font color=\"red\">**ライブラリ**</font>と呼びます（**パッケージ**と呼ぶこともあります）．\n\nライブラリは（基本的には）[**CRAN**](https://cran.r-project.org/)で管理されており，審査が行われた上で登録されています．ライブラリはCRANのリポジトリ（データを格納する場所のこと）に保存されており，RのユーザーはこのCRANのリポジトリから，必要なライブラリを<font color=\"red\">**インストール**</font>して用いることになります．\n\nライブラリは，インストールしただけでは用いることができません．ライブラリを<font color=\"red\">**読み込み（ロード，load）**</font>，メモリ上に展開しておくことでライブラリの機能を用いることができるようになります．この読み込みはRを起動するたびに行います．ライブラリの機能は関連する関数群として実装されていますので，ロードすることでライブラリに登録されている関数を用いることができるようになります．\n\n> ライブラリをいちいち読み込むのは面倒ではありますが，必要ないライブラリを読み込んでしまうと，その分メモリを食うことになります．必要ないライブラリは読み込まないことで，メモリを節約し，プログラムの動作を軽くすることができます．他の言語にもライブラリと同様の機能が備わっており，必要なライブラリのみを読み込んで用いるのが一般的です．\n\n## ライブラリのインストール\n\n### CRANからのインストール\n\n上記のように，ライブラリはまず<font color=\"red\">**インストール**</font>しないと用いることはできません．Rでライブラリをインストールする時には，<font color=\"red\">**install.packages関数**</font>を用います．install.packages関数の引数は**文字列のライブラリ名**です．ですので，ライブラリ名をダブルクオーテーションで囲う必要があります．ライブラリは自動的にダウンロードされ，**.libPaths関数**で表示されるフォルダにインストールされます．\n\n> ダブルクオーテーションで囲っていない場合には，ライブラリ名は名前ではなく，変数であると認識されます．ですので，「lib_names \\<- c(\"tidyverse\")」のような形で，あらかじめ文字列ベクターを作成している場合にはこのlib_namesを引数にしてインストールすることもできます．\n\n\n::: {.cell filename='ライブラリのインストール'}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\") # tidyverseというライブラリをインストールする\ninstall.packages(c(\"tidyverse\", \"pacman\")) # 複数のパッケージ名をベクターで与えることもできる\n\ninstall.packages(tidyverse) # エラーが出る．ライブラリ名は文字列でないとダメ\n\n.libPaths() # ライブラリのインストール先を表示\n```\n:::\n\n\n## ライブラリをロードする\n\nライブラリをロードするときには，<font color=\"red\">**library関数**</font>を用います．library関数の引数は，**文字列ではない**ライブラリ名です．文字列のライブラリ名でも読み込みはできますが，ダブルクオーテーションで囲う必要はありません．\n\n同様に**require関数**でもライブラリを読み込むことができます．require関数では，ライブラリの読み込みに成功するとTRUEが，失敗するとFALSEが返り値として返ってくるという特徴があります．\n\nlibrary関数を引数なしで実行するとインストールされているライブラリが表示されます．\n\n\n::: {.cell filename='ライブラリをロードする'}\n\n```{.r .cell-code}\nlibrary(tidyverse) # tidyverseパッケージを読み込む\nlibrary(\"pacman\") # pacmanパッケージを読み込む（文字列）\n\nrequire(pacman) # requireによる読み込み（読み込みができたらTRUEが返ってくる）\n\nlibrary() # ライブラリの一覧を表示する\n```\n:::\n\n\n### ライブラリをロードせずに使用する\n\nライブラリに登録されている機能を用いるには，通常ロードする必要がありますが，ライブラリをロードしなくても個別の機能（関数）を用いることはできます．ライブラリをロードせずにそのライブラリの関数を用いるときには，**「ライブラリ名::関数名」**という形で関数を呼び出します．\n\n\n::: {.cell filename='ライブラリをロードせずに関数を用いる'}\n\n```{.r .cell-code}\n# install.packages(\"lubridate\")\nymd(\"2023-10-10\") # lubridateパッケージの関数はライブラリをロードしないと使えない\n## Error in ymd(\"2023-10-10\"): could not find function \"ymd\"\nlubridate::ymd(\"2023-10-10\") # パッケージ名::関数名でロードしなくても関数が使える\n## [1] \"2023-10-10\"\n```\n:::\n\n\n### githubからのインストール\n\n最近では，最新のライブラリはCRANだけでなく，[**GitHub**](https://github.co.jp/)というプログラム開発プラットフォームからインストールすることもあります．ただし，**GitHubのライブラリはCRANによるチェックを受けていない**ものですので，インストールする際には注意が必要です．GitHubからのライブラリのインストールには，devtoolsパッケージのinstall_github関数を用います．引数には，ライブラリの**リポジトリ**というものを文字列で取ります．\n\n例えば，[Displayr](https://www.displayr.com/)という会社が開発しているflipPlotsというライブラリをGitHubからインストールする場合には，GitHubの対象のページのアドレス（https://github.com/Displayr/flipPlots）のうち，後ろの2つの項目（Displayr/flipPlots）をリポジトリとして取り扱います．GitHubのページにはリポジトリ名が記載されています．\n\n![図1：GitHubのリポジトリ名](./image/github_reponame.png)\n\n\n::: {.cell filename='GitHubからのライブラリのインストール'}\n\n```{.r .cell-code}\n# flipPlotsというライブラリをGitHubからインストールする(インストールは自己責任で)\n# devtools::install_github(\"Displayr/flipPlots\") \n```\n:::\n\n\n> GitHubは，[Git](https://git-scm.com/)（バージョン管理システム）というものと関連して用いる，リモートリポジトリと呼ばれるものです．RstudioからGit及びGitHubを利用することもできます．詳細については別の章で説明します．\n\n### Bioconductorからのインストール\n\n生物系の統計手法（DNAのアライメントやシーケンサーデータの処理，系統樹の計算等）のライブラリを専門的に取り扱っているのが，[**Bioconductor**](https://www.bioconductor.org/)です．Bioconductorに設定されているライブラリはCRANやgithubのものとは取り扱いが少し異なります．\n\nBioconductorのライブラリを利用するには，**BiocManager**というライブラリをあらかじめインストールする必要があります．BioconductorのライブラリのインストールにはこのBioManegerパッケージの**install関数**を用います．install関数を引数なしで用いると，Bioconductorのコアライブラリをすべてインストールすることができます．特定のライブラリをインストールするときには，引数に文字列のライブラリ名を入力します．\n\nインストールしたBioconductorライブラリのロードは通常のライブラリと同様にlibrary関数で行うことができます．\n\n\n::: {.cell filename='Bioconductorのライブラリをインストール'}\n\n```{.r .cell-code}\ninstall.packages(\"BioManager\") # BioManagerパッケージのインストール\nBiocManager::install() # Bioconductorのコアライブラリをインストールする\nBiocManager::install(c(\"GenomicFeatures\", \"AnnotationDbi\"))\n```\n:::\n\n\n## 現代的なライブラリの取り扱い：pacman\n\nライブラリはインストールしないとロードすることができません．ですので，インストールしていないライブラリを読み込むとエラーが出ます．if文を用いると，ライブラリがインストールされていないときにはインストールしてロード，インストールされているときにはロードが実行されるようにすることもできます．\n\n\n::: {.cell filename='pacman::p_load関数によるライブラリのロード'}\n\n```{.r .cell-code}\n# climetricsパッケージ（気候変化に関するライブラリ）は\n# インストールされていないので，エラーが出る\nlibrary(climetrics) \n\nrequire(climetrics) # インストールしないと読み込めないので，FALSEが返ってくる\n\n# require関数でFALSEが返ってきたら，パッケージをインストールする\nif(!require(climetrics)) install.packages(\"climetrics\")\n```\n:::\n\n\nこのif文とrequire関数を用いる書き方は長い間使用されてきましたが，やや複雑で覚えにくいものです．このようなときに，ライブラリの取り扱いを簡単にしてくれるのが<font color=\"red\">**pacmanパッケージ**</font>です．近年では，このpacmanパッケージの<font color=\"red\">**p_load関数**</font>を用いてパッケージをロードすることも増えてきています．p_load関数を用いるには，pacmanパッケージをロードする必要があります．ライブラリのロードのために別途pacmanだけロードするのは面倒ですので，通常は，**pacman::p_load**という形で，ライブラリをロードすることなく関数だけ用いるのが一般的です．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ライブラリをロードする（インストールされてなければインストールしてからロードする）\npacman::p_load(tidyverse, lubridate)\n```\n:::\n\n\n## tidyverse\n\n近年のRでは，[**Posit**](https://posit.co/)（旧Rstudio，IDEであるRstudioの開発元）およびPositのチーフサイエンティストである**Hadley Wichham**が作成した複数のライブラリのセットである，<font color=\"red\">[**tidyverse**](https://www.tidyverse.org/)</font>を用いるのがほぼ常識となってきています．tidyverseのライブラリ群を用いなくてもRを使うことはできますが，このライブラリ群を用いることでデータの整理・グラフ作成・文字列の処理等を簡単に行うことができるようになります．tidyverseのライブラリ群は以下のように一度にインストール・ロードすることができます．\n\n\n::: {.cell filename='tidyverseのインストールと読み込み'}\n\n```{.r .cell-code}\npacman::p_load(tidyverse) # tideverseのインストール・ロード(library関数でも可)\n```\n:::\n\n\ntidyverseに含まれているライブラリを以下に示します．個別の，重要なライブラリに関しては別章で説明します．\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>表1：tidyverseに含まれるライブラリ群</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> ライブラリ名 </th>\n   <th style=\"text-align:left;\"> ライブラリの主な機能 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> dpylr </td>\n   <td style=\"text-align:left;\"> データフレームの編集 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyr </td>\n   <td style=\"text-align:left;\"> データフレームの変形（縦・横持ち） </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> 現代的なデザインのグラフ作成 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tibble </td>\n   <td style=\"text-align:left;\"> 使いやすいデータフレームの提供 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> 文字列の処理 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> purrr </td>\n   <td style=\"text-align:left;\"> リストへの関数の適用 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> readr </td>\n   <td style=\"text-align:left;\"> データ読み込み </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> forcats </td>\n   <td style=\"text-align:left;\"> 因子（factor）の処理 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## その他の便利なライブラリ\n\ntidyverseの他にも，データ処理を簡単にしたり，インタラクティブなグラフを作成したり，Rで文書を作成したりするためのライブラリをRは備えています．以下によく用いられるライブラリを示します．統計に関するライブラリも無数に存在します．統計に関するライブラリについては，統計手法の説明の際に紹介します．\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>表2：Rで用いられている便利なライブラリ</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> ライブラリ名 </th>\n   <th style=\"text-align:left;\"> ライブラリの主な機能 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> magrittr </td>\n   <td style=\"text-align:left;\"> パイプ演算子を提供 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> readxl </td>\n   <td style=\"text-align:left;\"> Excelファイルの読み込み </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> googlesheet4 </td>\n   <td style=\"text-align:left;\"> Googleスプレッドシートの読み込み </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lubridate </td>\n   <td style=\"text-align:left;\"> 日時データの処理 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> broom </td>\n   <td style=\"text-align:left;\"> 統計結果の変形 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> DT </td>\n   <td style=\"text-align:left;\"> 美しい表の作成 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> plotly </td>\n   <td style=\"text-align:left;\"> インタラクティブなグラフの作成 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rmarkdown </td>\n   <td style=\"text-align:left;\"> 文書の作成 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> shiny </td>\n   <td style=\"text-align:left;\"> Webアプリケーションの作成 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pacman </td>\n   <td style=\"text-align:left;\"> ライブラリのインストール・ロード </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "chapter6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}