{
  "hash": "fc3d977a27916235eeee0e3dc95e640b",
  "result": {
    "markdown": "# Rのインストール\n\n## Rのインストール\n\nRを使い始める前に、まずはRをインストールする必要があります。[**CRAN**](https://cran.r-project.org/)（The Comprehensive R Archive Network）のホームページからRのインストーラーをダウンロードし，Rをインストールします。ホームページの「Download and Install R」の部分から、ご自身のPC環境（Windows、MacOS、Linux）を選択します。\n\n![図1：CRANのページ:Rのインストール](./image/CRAN_install1.png)\n\n### windowsでのインストール\n\nWindowsであれば、上の図に示したリンクから次のページに移動し、さらに「base」を選択します。\n\n![図2：CRANのページ:Windowsでのインストール](./image/CRAN_install2_win.png)\n\n移動すると、Rのダウンロードリンクが表示されますので、リンクをクリックしてRのインストーラーをダウンロードします。\n\n![図3：CRANのページ:Windowsのインストールファイルのダウンロード](./image/CRAN_install3_win.png)\n\nダウンロードされたインストーラーを開き、「次へ」を押していけばインストールが完了します。\n\n![図4：CRANのページ:インストーラーを起動した画面](./image/CRAN_install4_win.png)\n\n#### Rtoolsのインストール\n\nRを使うときには、時にCのコードをコンパイル（機械語に変換）する必要があります。このような場合に用いられるのが**Rtools**です。図2で示したページに、「Rtools」というリンクがありますので、ココからRtoolsのページに移動します。移動するとRのバージョンに合わせたRtoolsへのリンクが表示されます。最新のRをインストールした場合には、Rtoolsも最新のRに対応したものになりますので、一番上のRtoolsのリンクを開きます。Rのバージョンが最新ではない場合には、Rのバージョンを確認した上で対応したRtoolsを選択します。\n\n![図5：CRANのページ:Rtools](./image/CRAN_install5_Rtools.png)\n\nRのバージョンに対応したRtoolsのリンクに移動すると、下のように表示されます。「Rtools installer」のリンクを開くと、Rtoolsのインストーラーがダウンロードされます。インストーラーを開いてRtoolsをインストールしましょう。\n\n![図6：CRANのページ:Rtoolsのインストーラーのダウンロード](./image/CRAN_install6_Rtools.png)\n\n### MacOSでのインストール\n\nMacOSの場合もWindowsと同じように、図1でMacOSのリンクを選択してインストーラーをダウンロードします。MacOSの場合はCPUによってインストーラーが異なります。Apple Silicon（M1/M2）で動いているMacOS11以降のMacでは、上のリンクを選択してダウンロードし、IntelのCPUで動いているMacの場合は下のリンクを選択してダウンロードします。インストーラーを起動すると、Windowsと同じようにRをインストールすることができます。\n\n![図7：CRANのページ:R for Macのダウンロード](./image/CRAN_install7_mac.png)\n\n### Linuxでのインストール\n\nLinuxでのインストールでは、特にCRANのホームページに移動してダウンロードを行う必要はありません。apt install(Ubuntuの場合)でRをインストールするだけです。\n\n\n```{bash, eval=FALSE}\nsudo apt update\nsudo apt install r-base\n```\n\n\n## Rstudioのインストール\n\nRには、**R RGui**と呼ばれるグラフィカルユーザーインターフェース（GUI）が始めから登録されています。Rを起動するとまず表示されるのはこのRGuiです。\n\n![図8：RGui](./image/RGUI.png)\n\nこのRGuiを用いて、Rのスクリプト（プログラム）を書いて、実行することができます。ただし、このRGuiはRが利用され始めてすぐに開発されたものであり、最近のプログラミング環境では標準的に備わっている、**シンタックスハイライト**（プログラムの要素によって色やフォントを変化させる機能）や**入力補助**（関数の一部を入力すると入力候補を提案してくれる機能）、**コードのバージョン管理**（[git](https://git-scm.com/)などのバージョン管理ソフトとの連携）などの機能が備わっていません。このような機能を持つ、プログラミングを快適に行うための環境のことを、**統合開発環境（IDE、Integrated Development Environment）**と呼びます。\n\n統合開発環境として有名なのは、[Emacs](https://www.gnu.org/software/emacs/)や[Vim](https://www.vim.org/)、[Visual Studio Code（VScode）](https://azure.microsoft.com/ja-jp/products/visual-studio-code)などです。これらはRだけでなく、他の言語もサポートしています。Rでは、ほぼR専用の統合開発環境として、[**RStudio**](https://posit.co/products/open-source/rstudio/)というものがあります。\n\nRを使う時には、もちろんRGuiやEmacs、Vim、VScodeなどを用いても問題はありませんし、R言語だけでなく、他の言語（Pythonなど）を同時に利用するのであれば、むしろVScodeなどを利用する方が良いこともあります。ただし、Rを学び、Rで統計を行うのが主な目的であれば、RStudioを使うのが最もよいでしょう。\n\nRstudioは[**Posit**](https://posit.co/products/open-source/rstudio/)のホームページからダウンロードすることができます。まず、Rを上記の手順でインストールし、その後、Rstudioのインストーラーを以下の図の手順でダウンロードしましょう。\n\n![図9：Rstudioのダウンロード（右上からリンクへ移動）](./image/Posit_Rstudio.png)\n\n![図9：Rstudioのダウンロード（左のリンクからダウンロード）](./image/Posit_Rstudio2.png)\n\nRstudioのインストーラーを起動し、Rstudioがインストール出来たら準備は完了です。Rstudioを起動し、Rを使ってみましょう。\n\n",
    "supporting": [
      "chapter1_files"
    ],
    "filters": [],
    "includes": {}
  }
}